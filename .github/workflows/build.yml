name: Build

on: [workflow_dispatch, pull_request, push]

env:
  BUILD_TYPE: Release

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2
    - name: Create Build Environment
      run: cmake -E make_directory --release ${{github.workspace}}/build
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Install dependencies
      run: sudo apt update && sudo apt install libavformat-dev libavcodec-dev libavutil-dev
    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    - name: artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}
        path: build/klient
  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create Build Environment
      run: cmake -E make_directory --release ${{github.workspace}}/build
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
    - name: Cache windows libs
      id: ffmpeg-cache
      uses: actions/cache@v2
      with:
        path: "C:\\Program Files\\FFmpeg"
        key: ffmpeg-cache-key
    - name: Install dependencies
      if: steps.ffmpeg-cache.outputs.cache-hit != 'true'
      run: choco install ffmpeg-shared
      shell: bash
    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    - name: CPack
      run: cpack
      working-directory: ${{github.workspace}}/build
    - name: artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}
        path: build/_CPack_Packages/win64/NSIS/*.exe

